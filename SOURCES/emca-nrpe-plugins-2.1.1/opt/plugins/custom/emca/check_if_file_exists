#!/usr/bin/python

import sys
import getopt
import subprocess
import os.path
import hashlib

def print_help():
	print('''Check if file exists and check its md5 checksum

Available options:
-p	path
-c	md5 checksum
	''')
	sys.exit(0)

def md5(PATH):
	hash_md5 = hashlib.md5()
	with open(PATH, "rb") as f:
		for chunk in iter(lambda: f.read(4096), b""):
			hash_md5.update(chunk)
	return hash_md5.hexdigest()

def run_cmd(CMD):
	proc = subprocess.Popen(CMD, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
	stdout, stderr = proc.communicate()
	if proc.returncode != 0:
		output = [proc.returncode, stdout, stderr]
		return output
	output = [0, stdout, '']
	return output

if __name__ == '__main__':
	if len(sys.argv) == 1:
                print_help()
        try:
                opts, args = getopt.getopt(sys.argv[1:], 'hp:c:', ['help'])
        except getopt.GetoptError as err:
                print("Error: " + str(err))
                sys.exit(2)
        if not opts:
                print("Error: no option given")
                print("Type " + sys.argv[0] + " --help to print help")
                sys.exit(2)

	try:
		for opt, arg in opts:
                	if opt in ('-h', '--help'):
                	        print_help()
                	elif opt == '-p':
                	        PATH = arg
			elif opt == '-c':
				CHECKSUM = arg
                	else:
				print("Error: Unhandled option")
				print("Type " + sys.argv[0] + " --help to print help")
				sys.exit(2)

		if os.path.isfile(PATH):
			MD5 = md5(PATH)
			try:
				CHECKSUM
			except NameError:
				sys.stdout.write("OK - Location: " + PATH + " MD5SUM: " + MD5)
				sys.exit(0)
			if MD5 == CHECKSUM:
				sys.stdout.write("OK - Location: " + PATH + " MD5SUM PASS: " + MD5)
				sys.exit(0)
			else:
				sys.stdout.write("CRITICAL - Location: " + PATH + " MD5SUM FAIL: " + MD5)
				sys.exit(2)
		else:
			sys.stdout.write("CRITICAL - Location: " + PATH + " not found")
			sys.exit(2)
        except NameError:
                print("Error: Some of the options were not defined")
                print("Type " + sys.argv[0] + " --help to print help")
                sys.exit(2)
